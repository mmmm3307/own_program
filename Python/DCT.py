import math

'''
dct basis matrix
'''
DCTbasis=[[0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738],
[0.4903926402016152, 0.4157348061512726, 0.27778511650980114, 0.09754516100806417, -0.0975451610080641, -0.277785116509801, -0.4157348061512727, -0.4903926402016152],
[0.46193976625564337, 0.19134171618254492, -0.19134171618254486, -0.46193976625564337, -0.4619397662556434, -0.19134171618254517, 0.191341716182545, 0.46193976625564326],        
[0.4157348061512726, -0.0975451610080641, -0.4903926402016152, -0.2777851165098011, 0.2777851165098009, 0.4903926402016152, 0.09754516100806439, -0.41573480615127256],
[0.3535533905932738, -0.35355339059327373, -0.35355339059327384, 0.3535533905932737, 0.35355339059327384, -0.35355339059327334, -0.35355339059327356, 0.3535533905932733],       
[0.27778511650980114, -0.4903926402016152, 0.09754516100806415, 0.4157348061512728, -0.41573480615127256, -0.09754516100806401, 0.4903926402016153, -0.27778511650980076],       
[0.19134171618254492, -0.4619397662556434, 0.46193976625564326, -0.19134171618254495, -0.19134171618254528, 0.46193976625564337, -0.4619397662556432, 0.19134171618254478],       
[0.09754516100806417, -0.2777851165098011, 0.4157348061512728, -0.4903926402016153, 0.49039264020161527, -0.4157348061512725, 0.27778511650980076, -0.09754516100806429]]
print(DCTbasis[0][1])

'''
8x1 1D DCT transform
frag:1/-1   DCT/IDCT
'''
def DCT1D(frag,signal):
  result = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
  # DCT:
  if frag == 1:
    for i in range(8):
      for j in range(8):
        result[i] += signal[j]*DCTbasis[i][j]

  elif frag == -1:
    for i in range(8):
      for j in range(8):
        result[i] += signal[j]*DCTbasis[j][i]
       
  else: print('frag set error')

  return result

'''
8x8 2D DCT transform
frag:1/-1   DCT/IDCT
'''




  
  
  
  
  
  